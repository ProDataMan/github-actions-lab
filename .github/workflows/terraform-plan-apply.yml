name: 'Terraform AWS Pipeline'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  TERRAFORM_DIR: './main'

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "us-east-1"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.0"

    - name: Terraform Init
      run: |
        terraform init
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Terraform Plan
      id: tf-plan
      run: |
        terraform plan -detailed-exitcode -no-color -out=tfplan || exit_code=$?
        echo "exitcode=${exit_code}" >> $GITHUB_OUTPUT
        if [ $exit_code -eq 1 ]; then
          echo "Terraform Plan Failed!"
          exit 1
        fi
      working-directory: ${{ env.TERRAFORM_DIR }}

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: ${{ env.TERRAFORM_DIR }}/tfplan
        retention-days: 1

  approval:
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == '2'
    steps:
      - run: echo "Waiting for approval..."

  # terraform-apply:
  #   needs: [terraform-plan, approval]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == '2'
    
  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Configure AWS Credentials
  #     uses: aws-actions/configure-aws-credentials@v2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ secrets.AWS_REGION }}

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v2
  #     with:
  #       terraform_version: "1.5.0"

  #   - name: Terraform Init
  #     run: terraform init
  #     working-directory: ${{ env.TERRAFORM_DIR }}

  #   - name: Download Terraform Plan
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: tfplan
  #       path: ${{ env.TERRAFORM_DIR }}

  #   - name: Terraform Apply
  #     run: terraform apply -auto-approve tfplan
  #     working-directory: ${{ env.TERRAFORM_DIR }}